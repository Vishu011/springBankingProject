{"ast":null,"code":"import { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiClientService = /*#__PURE__*/(() => {\n  class ApiClientService {\n    constructor(http) {\n      this.http = http;\n      this.ep = environment.endpoints;\n    }\n    // ========== Accounts ==========\n    getBalance(accountNumber) {\n      return this.http.get(`${this.ep.accountMgmtBase}/api/v1/accounts/${accountNumber}/balance`);\n    }\n    getLedgerHistory(accountNumber, size = 50) {\n      return this.http.get(`${this.ep.ledgerBase}/api/v1/accounts/${accountNumber}/history?size=${size}`);\n    }\n    // ========== Payments (internal transfer) ==========\n    initiateInternalTransfer(body) {\n      return this.http.post(`${this.ep.paymentGatewayBase}/api/v1/payments/internal-transfer`, body, {\n        headers: {\n          \"Idempotency-Key\": cryptoRandom()\n        }\n      });\n    }\n    getPaymentStatus(paymentId) {\n      return this.http.get(`${this.ep.paymentGatewayBase}/api/v1/payments/${paymentId}/status`, {\n        responseType: \"text\"\n      });\n    }\n    // ========== Beneficiaries ==========\n    createBeneficiary(customerId, body) {\n      return this.http.post(`${this.ep.beneficiaryMgmtBase}/api/v1/customers/${customerId}/beneficiaries`, body);\n    }\n    verifyBeneficiaryOtp(body) {\n      return this.http.post(`${this.ep.beneficiaryMgmtBase}/api/v1/beneficiaries/verify-otp`, body);\n    }\n    listBeneficiaries(customerId) {\n      return this.http.get(`${this.ep.beneficiaryMgmtBase}/api/v1/customers/${customerId}/beneficiaries`);\n    }\n    // ========== Loans ==========\n    listLoansByCustomer(customerId) {\n      return this.http.get(`${this.ep.loanMgmtBase}/api/v1/loans/customers/${customerId}`);\n    }\n    getLoanSchedule(loanAccountNumber) {\n      return this.http.get(`${this.ep.loanMgmtBase}/api/v1/loans/${loanAccountNumber}/schedule`);\n    }\n    getLoanSummary(loanAccountNumber) {\n      return this.http.get(`${this.ep.loanMgmtBase}/api/v1/loans/${loanAccountNumber}/summary`);\n    }\n    applyEmiDev(loanAccountNumber, body) {\n      return this.http.post(`${this.ep.loanMgmtBase}/api/v1/loans/internal/dev/loans/${loanAccountNumber}/apply-emi`, body);\n    }\n    // ========== Cards: Issuance ==========\n    submitCardIssuance(body) {\n      return this.http.post(`${this.ep.cardIssuanceBase}/api/v1/cards/issuance/applications`, body);\n    }\n    getIssuanceApplication(appId) {\n      return this.http.get(`${this.ep.cardIssuanceBase}/api/v1/cards/issuance/applications/${appId}`);\n    }\n    runEligibility(appId) {\n      return this.http.post(`${this.ep.cardIssuanceBase}/api/v1/cards/issuance/applications/${appId}/eligibility-check`, {});\n    }\n    approveIssuance(appId) {\n      return this.http.post(`${this.ep.cardIssuanceBase}/api/v1/cards/issuance/applications/${appId}/approve`, {});\n    }\n    // ========== Cards: Management ==========\n    createCardDev(body) {\n      return this.http.post(`${this.ep.cardMgmtBase}/api/v1/cards/dev/create`, body);\n    }\n    getCard(cardId) {\n      return this.http.get(`${this.ep.cardMgmtBase}/api/v1/cards/${cardId}`);\n    }\n    activateCard(cardId) {\n      return this.http.post(`${this.ep.cardMgmtBase}/api/v1/cards/${cardId}/activate`, {});\n    }\n    setCardLimits(cardId, limit) {\n      return this.http.post(`${this.ep.cardMgmtBase}/api/v1/cards/${cardId}/limits`, {\n        limit\n      });\n    }\n    updateCardStatus(cardId, status) {\n      return this.http.post(`${this.ep.cardMgmtBase}/api/v1/cards/${cardId}/status`, {\n        status\n      });\n    }\n    getCardByIssuanceApp(appId) {\n      return this.http.get(`${this.ep.cardMgmtBase}/api/v1/cards/issuance/${appId}`);\n    }\n    listCardsByCustomer(customerId) {\n      return this.http.get(`${this.ep.cardMgmtBase}/api/v1/cards/customers/${customerId}`);\n    }\n    static {\n      this.ɵfac = function ApiClientService_Factory(t) {\n        return new (t || ApiClientService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiClientService,\n        factory: ApiClientService.ɵfac,\n        providedIn: \"root\"\n      });\n    }\n  }\n  return ApiClientService;\n})();\nfunction cryptoRandom() {\n  try {\n    // @ts-ignore\n    if (typeof crypto !== \"undefined\" && crypto.randomUUID) {\n      // @ts-ignore\n      return crypto.randomUUID();\n    }\n  } catch {}\n  return \"idem-\" + Math.random().toString(36).slice(2);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}