{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api-client.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction CardsComponent_pre_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"pre\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.issuanceView));\n  }\n}\nfunction CardsComponent_b_84_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"b\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r2 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\"\", c_r2.cardId, \" (\", c_r2.status, \")\");\n  }\n}\nfunction CardsComponent_span_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"-\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CardsComponent_pre_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"pre\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx_r0.fetchedCard));\n  }\n}\nfunction CardsComponent_div_97_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"No cards\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CardsComponent_ul_98_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const k_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate4(\" \", k_r3.cardId, \" \\u2014 \", k_r3.status, \" \\u2014 \", k_r3.productType, \" \\u2014 limit=\", k_r3.spendLimit, \" \");\n  }\n}\nfunction CardsComponent_ul_98_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\");\n    i0.ɵɵtemplate(1, CardsComponent_ul_98_li_1_Template, 2, 4, \"li\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.customerCards);\n  }\n}\nfunction CardsComponent_div_99_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtext(1, \"Working...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CardsComponent_div_100_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"b\");\n    i0.ɵɵtext(2, \"Error:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMsg, \"\\n\");\n  }\n}\nexport let CardsComponent = /*#__PURE__*/(() => {\n  class CardsComponent {\n    constructor(api, fb) {\n      this.api = api;\n      this.issuanceAppId = null;\n      this.issuanceStatus = null;\n      this.issuanceView = null;\n      // Results\n      this.createdCard = null;\n      this.fetchedCard = null;\n      this.customerCards = [];\n      // UI state\n      this.busy = false;\n      this.errorMsg = null;\n      this.issuanceForm = fb.group({\n        customerId: [null, [Validators.required, Validators.min(1)]],\n        productType: [\"CREDIT_CARD\"]\n      });\n      this.createDevForm = fb.group({\n        customerId: [null, [Validators.required, Validators.min(1)]],\n        productType: [\"CREDIT_CARD\"],\n        initialLimit: [5000, [Validators.min(1)]]\n      });\n      this.manageForm = fb.group({\n        cardId: [\"\"],\n        limit: [9000, [Validators.min(1)]],\n        status: [\"BLOCK\"]\n      });\n    }\n    clearError() {\n      this.errorMsg = null;\n    }\n    handleError(e) {\n      this.busy = false;\n      try {\n        // Standard error envelope { message, correlationId, ... }\n        if (e?.error?.message) {\n          const cid = e?.error?.correlationId ? ` | cid=${e.error.correlationId}` : \"\";\n          this.errorMsg = `${e.error.message}${cid}`;\n          return;\n        }\n      } catch {}\n      this.errorMsg = e?.message || \"Operation failed\";\n    }\n    // ===== Issuance Flow =====\n    submitIssuance() {\n      this.clearError();\n      if (this.issuanceForm.invalid) return;\n      this.busy = true;\n      const {\n        customerId,\n        productType\n      } = this.issuanceForm.value;\n      this.api.submitCardIssuance({\n        customerId,\n        productType\n      }).subscribe({\n        next: res => {\n          this.issuanceAppId = res.applicationId;\n          this.issuanceStatus = res.status;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    runEligibility() {\n      if (!this.issuanceAppId) return;\n      this.clearError();\n      this.busy = true;\n      this.api.runEligibility(this.issuanceAppId).subscribe({\n        next: view => {\n          this.issuanceView = view;\n          this.issuanceStatus = view?.status || this.issuanceStatus;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    approveIssuance() {\n      if (!this.issuanceAppId) return;\n      this.clearError();\n      this.busy = true;\n      this.api.approveIssuance(this.issuanceAppId).subscribe({\n        next: view => {\n          this.issuanceView = view;\n          this.issuanceStatus = view?.status || \"APPROVED\";\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    getCardByIssuanceApp() {\n      if (!this.issuanceAppId) return;\n      this.clearError();\n      this.busy = true;\n      this.api.getCardByIssuanceApp(this.issuanceAppId).subscribe({\n        next: card => {\n          this.fetchedCard = card;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    // ===== Management Dev Helpers =====\n    createCardDev() {\n      this.clearError();\n      if (this.createDevForm.invalid) return;\n      this.busy = true;\n      const {\n        customerId,\n        productType,\n        initialLimit\n      } = this.createDevForm.value;\n      this.api.createCardDev({\n        customerId,\n        productType,\n        initialLimit\n      }).subscribe({\n        next: res => {\n          this.createdCard = res;\n          this.manageForm.patchValue({\n            cardId: res.cardId\n          });\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    getCard() {\n      const cardId = this.manageForm.value.cardId;\n      if (!cardId) return;\n      this.clearError();\n      this.busy = true;\n      this.api.getCard(cardId).subscribe({\n        next: card => {\n          this.fetchedCard = card;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    activateCard() {\n      const cardId = this.manageForm.value.cardId;\n      if (!cardId) return;\n      this.clearError();\n      this.busy = true;\n      this.api.activateCard(cardId).subscribe({\n        next: card => {\n          this.fetchedCard = card;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    setLimits() {\n      const cardId = this.manageForm.value.cardId;\n      const limit = Number(this.manageForm.value.limit || 0);\n      if (!cardId || limit <= 0) return;\n      this.clearError();\n      this.busy = true;\n      this.api.setCardLimits(cardId, limit).subscribe({\n        next: card => {\n          this.fetchedCard = card;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    updateStatus() {\n      const cardId = this.manageForm.value.cardId;\n      const status = this.manageForm.value.status;\n      if (!cardId || !status) return;\n      this.clearError();\n      this.busy = true;\n      this.api.updateCardStatus(cardId, status).subscribe({\n        next: card => {\n          this.fetchedCard = card;\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    listByCustomer() {\n      const cid = this.createDevForm.value.customerId;\n      if (!cid) return;\n      this.clearError();\n      this.busy = true;\n      this.api.listCardsByCustomer(Number(cid)).subscribe({\n        next: cards => {\n          this.customerCards = cards || [];\n          this.busy = false;\n        },\n        error: e => this.handleError(e)\n      });\n    }\n    static {\n      this.ɵfac = function CardsComponent_Factory(t) {\n        return new (t || CardsComponent)(i0.ɵɵdirectiveInject(i1.ApiClientService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CardsComponent,\n        selectors: [[\"app-cards\"]],\n        decls: 101,\n        vars: 24,\n        consts: [[1, \"card\"], [3, \"ngSubmit\", \"formGroup\"], [2, \"display\", \"flex\", \"gap\", \"8px\", \"flex-wrap\", \"wrap\"], [\"type\", \"number\", \"formControlName\", \"customerId\", \"placeholder\", \"e.g. 1001\"], [\"formControlName\", \"productType\"], [\"value\", \"CREDIT_CARD\"], [\"value\", \"DEBIT_CARD\"], [\"type\", \"submit\", 3, \"disabled\"], [2, \"margin-top\", \"8px\"], [3, \"click\", \"disabled\"], [\"style\", \"white-space:pre-wrap; background:#0b1220; padding:8px; border-radius:6px;\", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"initialLimit\", \"placeholder\", \"5000\"], [\"type\", \"text\", \"formControlName\", \"cardId\", \"placeholder\", \"Paste Card ID\"], [\"type\", \"number\", \"formControlName\", \"limit\", \"placeholder\", \"9000\"], [\"formControlName\", \"status\"], [\"value\", \"BLOCK\"], [\"value\", \"UNBLOCK\"], [2, \"margin-top\", \"8px\", \"display\", \"flex\", \"gap\", \"8px\", \"flex-wrap\", \"wrap\"], [\"type\", \"button\", 3, \"click\", \"disabled\"], [4, \"ngIf\"], [2, \"display\", \"flex\", \"gap\", \"8px\", \"align-items\", \"center\", \"flex-wrap\", \"wrap\"], [\"type\", \"number\", 3, \"input\", \"value\"], [\"class\", \"card\", 4, \"ngIf\"], [\"class\", \"card\", \"style\", \"border:1px solid #7f1d1d; background:#1b0b0b;\", 4, \"ngIf\"], [2, \"white-space\", \"pre-wrap\", \"background\", \"#0b1220\", \"padding\", \"8px\", \"border-radius\", \"6px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card\", 2, \"border\", \"1px solid #7f1d1d\", \"background\", \"#1b0b0b\"]],\n        template: function CardsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Cards\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 0)(3, \"h3\");\n            i0.ɵɵtext(4, \"Issuance (dev-open)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function CardsComponent_Template_form_ngSubmit_5_listener() {\n              return ctx.submitIssuance();\n            });\n            i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n            i0.ɵɵtext(8, \" Customer ID \");\n            i0.ɵɵelement(9, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"label\");\n            i0.ɵɵtext(11, \" Product Type \");\n            i0.ɵɵelementStart(12, \"select\", 4)(13, \"option\", 5);\n            i0.ɵɵtext(14, \"CREDIT_CARD\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"option\", 6);\n            i0.ɵɵtext(16, \"DEBIT_CARD\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(17, \"button\", 7);\n            i0.ɵɵtext(18, \"Submit\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(19, \"div\", 8)(20, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_20_listener() {\n              return ctx.runEligibility();\n            });\n            i0.ɵɵtext(21, \"Run Eligibility\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_22_listener() {\n              return ctx.approveIssuance();\n            });\n            i0.ɵɵtext(23, \"Approve\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_24_listener() {\n              return ctx.getCardByIssuanceApp();\n            });\n            i0.ɵɵtext(25, \"Fetch Card (Kafka)\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(26, \"div\", 8)(27, \"div\");\n            i0.ɵɵtext(28, \"applicationId: \");\n            i0.ɵɵelementStart(29, \"b\");\n            i0.ɵɵtext(30);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(31, \"div\");\n            i0.ɵɵtext(32, \"status: \");\n            i0.ɵɵelementStart(33, \"b\");\n            i0.ɵɵtext(34);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(35, CardsComponent_pre_35_Template, 3, 3, \"pre\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(36, \"div\", 0)(37, \"h3\");\n            i0.ɵɵtext(38, \"Management (dev-open)\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(39, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function CardsComponent_Template_form_ngSubmit_39_listener() {\n              return ctx.createCardDev();\n            });\n            i0.ɵɵelementStart(40, \"div\", 2)(41, \"label\");\n            i0.ɵɵtext(42, \" Customer ID \");\n            i0.ɵɵelement(43, \"input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"label\");\n            i0.ɵɵtext(45, \" Product Type \");\n            i0.ɵɵelementStart(46, \"select\", 4)(47, \"option\", 5);\n            i0.ɵɵtext(48, \"CREDIT_CARD\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(49, \"option\", 6);\n            i0.ɵɵtext(50, \"DEBIT_CARD\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(51, \"label\");\n            i0.ɵɵtext(52, \" Initial Limit \");\n            i0.ɵɵelement(53, \"input\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(54, \"button\", 7);\n            i0.ɵɵtext(55, \"Create Dev Card\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(56, \"div\", 8)(57, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function CardsComponent_Template_form_ngSubmit_57_listener($event) {\n              return $event.preventDefault();\n            });\n            i0.ɵɵelementStart(58, \"div\", 2)(59, \"label\");\n            i0.ɵɵtext(60, \" Card ID \");\n            i0.ɵɵelement(61, \"input\", 12);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(62, \"label\");\n            i0.ɵɵtext(63, \" Limit \");\n            i0.ɵɵelement(64, \"input\", 13);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(65, \"label\");\n            i0.ɵɵtext(66, \" Status \");\n            i0.ɵɵelementStart(67, \"select\", 14)(68, \"option\", 15);\n            i0.ɵɵtext(69, \"BLOCK\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(70, \"option\", 16);\n            i0.ɵɵtext(71, \"UNBLOCK\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(72, \"div\", 17)(73, \"button\", 18);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_73_listener() {\n              return ctx.getCard();\n            });\n            i0.ɵɵtext(74, \"Get\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(75, \"button\", 18);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_75_listener() {\n              return ctx.activateCard();\n            });\n            i0.ɵɵtext(76, \"Activate\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(77, \"button\", 18);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_77_listener() {\n              return ctx.setLimits();\n            });\n            i0.ɵɵtext(78, \"Set Limits\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(79, \"button\", 18);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_79_listener() {\n              return ctx.updateStatus();\n            });\n            i0.ɵɵtext(80, \"Update Status\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(81, \"div\", 8)(82, \"div\");\n            i0.ɵɵtext(83, \"created: \");\n            i0.ɵɵtemplate(84, CardsComponent_b_84_Template, 2, 2, \"b\", 19)(85, CardsComponent_span_85_Template, 2, 0, \"span\", 19);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(86, CardsComponent_pre_86_Template, 3, 3, \"pre\", 10);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(87, \"div\", 0)(88, \"h3\");\n            i0.ɵɵtext(89, \"List By Customer\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(90, \"div\", 20)(91, \"label\");\n            i0.ɵɵtext(92, \" Customer ID \");\n            i0.ɵɵelementStart(93, \"input\", 21);\n            i0.ɵɵlistener(\"input\", function CardsComponent_Template_input_input_93_listener($event) {\n              return ctx.createDevForm.patchValue({\n                customerId: $event.target.valueAsNumber\n              });\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(94, \"button\", 9);\n            i0.ɵɵlistener(\"click\", function CardsComponent_Template_button_click_94_listener() {\n              return ctx.listByCustomer();\n            });\n            i0.ɵɵtext(95, \"List\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(96, \"div\", 8);\n            i0.ɵɵtemplate(97, CardsComponent_div_97_Template, 2, 0, \"div\", 19)(98, CardsComponent_ul_98_Template, 2, 1, \"ul\", 19);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(99, CardsComponent_div_99_Template, 2, 0, \"div\", 22)(100, CardsComponent_div_100_Template, 4, 1, \"div\", 23);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"formGroup\", ctx.issuanceForm);\n            i0.ɵɵadvance(12);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || ctx.issuanceForm.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.issuanceAppId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.issuanceAppId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.issuanceAppId);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate(ctx.issuanceAppId || \"-\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate(ctx.issuanceStatus || \"-\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.issuanceView);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.createDevForm);\n            i0.ɵɵadvance(15);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || ctx.createDevForm.invalid);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.manageForm);\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.manageForm.value.cardId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.manageForm.value.cardId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.manageForm.value.cardId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.manageForm.value.cardId);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ctx.createdCard);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.createdCard);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.fetchedCard);\n            i0.ɵɵadvance(7);\n            i0.ɵɵproperty(\"value\", ctx.createDevForm.value.customerId || \"\");\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.busy || !ctx.createDevForm.value.customerId);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", (ctx.customerCards == null ? null : ctx.customerCards.length) === 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.customerCards == null ? null : ctx.customerCards.length);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.busy);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMsg);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.JsonPipe]\n      });\n    }\n  }\n  return CardsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}